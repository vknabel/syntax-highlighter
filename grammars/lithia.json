{
  "simpleTerms": {
    "comment": "comment",

    "\"let\"": "modifier",

    "string_literal": "string",
    "escape_sequence": "string",
    "number_literal": "number",

    "\"switch\"": "control",

    "\"data\"": "control",
    "\"enum\"": "control",
    "\"import\"": "control",
    "\"package\"": "control",
    "\"func\"": "control",

    "\"+\"": "operator",
    "\"-\"": "operator",
    "\"*\"": "operator",
    "\"/\"": "operator",
    "\"==\"": "operator",
    "\"!=\"": "operator",
    "\">\"": "operator",
    "\"<\"": "operator",
    "\">=\"": "operator",
    "\"<=\"": "operator",
    "\"!\"": "operator",
    "\"<<\"": "operator",
    "\">>\"": "operator",
    "\"=\"": "operator",
    "\"||\"": "operator",
    "\"=>\"": "operator",
    "\"[\"": "operator",
    "\"]\"": "operator",

    "\"(\"": "punctuation",
    "\")\"": "punctuation",
    "\"{\"": "punctuation",
    "\"}\"": "punctuation",
    "\",\"": "punctuation",
    "\";\"": "punctuation",
    "\".\"": "punctuation",
    "\":\"": "punctuation",

    "\"True\"": "variable.readonly.defaultLibrary",
    "\"False\"": "variable.readonly.defaultLibrary",
    "\"Bool\"": "variable.readonly.defaultLibrary"
  },

  "complexTerms": ["identifier"],

  "complexScopes": {
    "import_declaration > identifier": "macro",
    "package_declaration > identifier": "namespace",
    "data_declaration > identifier": "type",
    "enum_declaration > identifier": "type",
    "function_declaration > identifier": "function",
    "let_declaration > identifier": "variable",
    "member_access > identifier": "variable",
    "switch_expression > identifier": "type",
    "switch_case > identifier": "type",
    "invocation_expression > identifier[0]": "function",
    "invocation_expression > identifier": "variable",
    "enum_case_reference": "type",
    "data_property > identifier[0]": "function",
    "data_property > identifier": "variable"
  }
}
